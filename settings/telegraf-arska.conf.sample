# Input and output plugin configuration of Telegraf plugin
#link to telegraf configuration folder
#sudo ln -s /home/pi/arska-server/settings/telegraf-arska-server.conf /etc/telegraf/telegraf.d/telegraf-arska-server.conf


[[outputs.http]]
# Output sensor data to Arska Server process (with http server)
  ## URL is the address to send metrics to
  url = "http://127.0.0.1:8080/telegraf"
  data_format = "json"
 ## Additional HTTP headers
[outputs.http.headers]
  #   Should be set manually to "application/json" for json data_format
  #   Content-Type = "text/plain; charset=utf-8"
 	Content-Type = "application/json; charset=utf-8"
  

   
[[outputs.influxdb_v2]]
# Output sensor data to InfluxDB (cloud or local)
  ## The URLs of the InfluxDB cluster nodes.
  ##
  ## Multiple URLs can be specified for a single cluster, only ONE of the
  ## urls will be written to each interval.
  ##   ex: urls = ["https://us-west-2-1.aws.cloud2.influxdata.com"]
  urls = ["https://europe-west1-1.gcp.cloud2.influxdata.com"]
  json_timestamp_units = "1ns"

  ## Token for authentication.
  token = "YOUR_API_TOKEN_COMES_HERE"

  ## Organization is the name of the organization you wish to write to; must exist.
  organization = "YOUR_ORGANIZATION_COMES_HERE"

  ## Destination bucket to write into.
  bucket = "arska"

# InfluxDB V2 Listener Input Plugin
# forwards updates from Arska to influxDB
[[inputs.influxdb_v2_listener]]
  ## Address and port to host InfluxDB listener on
  ## (Double check the port. Could be 9999 if using OSS Beta)
  service_address = "127.0.0.1:8086"


  
[[inputs.exec]]
#Read 1-wire sensor values (temperature) with a Python script
 	commands = [ "/usr/bin/python3 /home/pi/arska-server/onew_telegraf_pl.py"]
  	timeout = "30s"
  	interval = "60s"
  	data_format = "influx"
  	precision = "0s"
  	  
[[inputs.exec]]
# Fetch energy spot prices (Entsoe) and solar forecast (BCDC Energia)
  	commands = [ "/usr/bin/python3 /home/pi/arska-server/bcdc_telegraf_pl.py" ,"/usr/bin/python3 /home/pi/arska-server/entsoe_telegraf_pl.py"]
  	timeout = "30s"
	  interval = "4h"
  	data_format = "influx"
  	precision = "0s"
  	 

    
